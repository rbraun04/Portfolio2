{"version":3,"sources":["images/Trek.png","components/dancers.js","components/actors.js","images/imgCMS.js","components/musicians.js","components/genres.js","components/users.js","components/broadway.js","components/Card.js","pages/Users/UserList.js","utils/API.js","pages/Home.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dancers","id","className","Body","Title","Text","href","variant","Component","Actors","Trek","style","width","Img","src","size","Musicians","Genres","Users","alt","type","placeholder","Broadway","styles","card","image","container","padding","Card","username","email","UserList","users","class","map","user","key","_id","axios","get","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0afea4dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trek.c7ef57c9.png\";","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card'\n\n\n\nclass Dancers extends Component {\n    render() {\n        return (\n            <div id=\"content-2\" className=\"content content--switch\">\n\t\t\t\t<h2 className=\"content__title text-danger\">Contact</h2>\n                \n\t\t\t\t<div ></div>\n                <div className = \"background2 row \">\n                <Card className=\"text-center bg-dark text-white\">\n\n  <Card.Body>\n    <Card.Title>Ryan Braun</Card.Title>\n    <Card.Text>\n     The best way to reach me is by contacting me via LinkedIn!</Card.Text>\n    <a href = \"http://www.linkedin.com/in/ryangbraun\" variant=\"primary\">LinkedIn</a>\n  </Card.Body>\n</Card>\n\n\n                </div>\n                \n\t\t\t</div>\n        )\n    }\n}\n\nexport default Dancers;","import React, {Component} from 'react';\nimport Link from 'react-bootstrap/NavLink'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport imgCMS from \"../images/imgCMS\";\nimport Trek from \"../images/imgCMS\"\n\n\n\nclass Actors extends Component {\n    render() {\n        return (\n            <>\n            \n            <div id=\"content-4\" className=\"content content--switch\">\n\t\t\t\t<h2 className=\"content__title\">Web Development</h2>\n                <div>\n                    \n               \n                </div>\n\t\t\t\t\n                <div className = \"background2 row \">\n\n                    <div className = \"  col-md-3\">\n                <Card className = \"bg-dark\" style={{ width: '18rem', }} >\n                <Card.Img variant=\"\" src=\"https://rbraun04.github.io/Ryan-Braun-Artist-Portfolio/MagnemOpus%20copy.png\" />\n                <Card.Body className = \"text-white\">\n                <Card.Title>Magnum Opus</Card.Title>\n                <Card.Text>\n                        <h6>Responsibilities: Front-End</h6>\n                        This was the second group project of my coding bootcamp with UCLA extension.  This app is a ticket reservation system for event planning.  The databse is populated with local vendors for the users to choose from.\n                </Card.Text>\n                <a href = \"https://vast-ocean-17405.herokuapp.com/\" variant=\"info\" size=\"sm\">Deployed Website</a>\n                <br></br>\n                <a href = \"https://github.com/rbraun04/MagnusOpus\" variant=\"info\" size=\"sm\">Github Repository</a>\n                </Card.Body>\n                </Card>\n                </div>\n                <div className = \"col-md-3\">\n                <Card className = \"bg-dark\"  style={{ width: '18rem' }}>\n                <Card.Img variant=\"\" src=\"https://rbraun04.github.io/Ryan-Braun-Artist-Portfolio/Trek.png\" />\n                <Card.Body className = \"text-white\">\n                <Card.Title>Trek</Card.Title>\n                <Card.Text>\n                <h6>Responsibilities: Front-End</h6>\n                        Trek was my first project in my coding bootcamp with UCLA extension.  We built an app that allows a user to search local hikes and locate a restaurant near that hike to complete a round trip trek!\n                </Card.Text>\n                <a href = \"https://rbraun04.github.io/Trek/\" variant=\"info\" size=\"sm\">Deployed Website</a>\n                <br></br>\n<a href = \"https://github.com/rbraun04/Trek\" variant=\"info\" size=\"sm\">Github Repository</a>\n                </Card.Body>\n                </Card>\n                </div>\n                <div className = \"col-md-3\">\n                <Card className = \"bg-dark\"  style={{ width: '18rem' }}>\n                <Card.Img variant=\"\" src=\"https://rbraun04.github.io/Ryan-Braun-Artist-Portfolio/WorkDayScheduler.png\" />\n                <Card.Body className = \"text-white\">\n                <Card.Title>Work Day Scheduler</Card.Title>\n                <Card.Text>\n                <h6>Responsibilities: Full-Stack</h6>\n                        This app lets you plan your work day by adding notes to each hour and the color scheme alerts you of the time of day.\n                </Card.Text>\n                <a href = \"https://rbraun04.github.io/Day-Scheduler/\" variant=\"info\" size=\"sm\">Deployed Website</a>\n                <br></br>\n<a href = \"https://github.com/rbraun04/Day-Scheduler\" variant=\"info\" size=\"sm\">Github Repository</a>\n                </Card.Body>\n                </Card>\n                </div>\n                <div className = \"col-md-3\">\n<Card className = \"bg-dark\"  style={{ width: '18rem' }}>\n<Card.Img variant=\"\" src=\"https://rbraun04.github.io/Ryan-Braun-Artist-Portfolio/Puppy.png\" />\n<Card.Body className = \"text-white\">\n<Card.Title>Puppy Love</Card.Title>\n<Card.Text>\n<h6>Responsibilities: Front-End</h6>\nThis was my third group project in my coding bootcamp.  When you sign up for this app you asked your preferences of a the type fo dog you would like to interact with.  An API call is issued for a background check and then the user page is popualed with dogs based on your preferences.\n</Card.Text>\n<a href = \"https://www.google.com/\" variant=\"info\" size=\"sm\">Deployed Website</a>\n<br></br>\n<a href = \"https://github.com/jdelintt/PuppyLove\" variant=\"info\" size=\"sm\">Github Repository</a>\n</Card.Body>\n</Card>\n</div>\n                </div>\n              \n\n              \n\t\t\t</div>\n            <div>\n                \n            </div>\n            \n            </>\n        )\n    }\n}\n\nexport default Actors;","import Trek from \"./Trek.png\";\n\n\n \n\n\n\n\nexport default {\n    \"Trek.png\": Trek,\n\n\n}","import React, {Component} from 'react';\n\n\n\n\nclass Musicians extends Component {\n    render() {\n        return (     \n            <div id=\"content-5\" className=\"content content--switch\">\n\t\t\t\t<h2 className=\"c.grim__item-bg--5 \">Musicians</h2>\n\t\t\t\t<div className=\".grim__item-bg--5 \">Who's who</div>\n                <a href = \"/profile/ryanB\" className=\"grim__link grim__item-content\" >View Artist</a>\n                \n                </div>\n\n                \n            //map through array of musicians into cards\n            //api call to get musicians and artists and set the response into state\n        //     <div>\n        //     <ul>\n        //       {\n        //         this.props.cities.map((city, id) => (\n        //           <CitiesIndexItem key={id} city={city} />\n        //         ))\n        //       }\n        //     </ul>\n        //     {this.props.children}\n        //   </div>\n                \n            \n\n        )\n    }\n}\n\nexport default Musicians;","import React, {Component} from 'react';\n\n\nclass Genres extends Component {\n    render() {\n        return (\n            <div id=\"content-6\" className=\"content content--switch\">\n\t\t\t\t<h2 className=\"content__title\">Stage</h2>\n\t\t\t\t<div className=\"content__subtitle\"></div>\n\t\t\t</div>\n        )\n    }\n}\n\nexport default Genres;","import React, {Component} from 'react';\n\n\n\nclass Users extends Component {\n    render() {\n        return (\n            <div id=\"users\" className=\"content content--switch\">\n            <div className=\"card\" >\n                <img src=\"...\" className=\"card-img-top\" alt=\"...\"></img>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">First Name</h5>\n                <p className=\"card-text\">About</p>\n            </div>\n                <ul className=\"list-group list-group-flush\">Skills\n                    <li className=\"list-group-item\">Rockpaperscissors</li>\n                    <li className=\"list-group-item\">Arguing</li>\n                    <li className=\"list-group-item\">Complaining</li>\n                </ul>\n            <div className=\"card-body\">\n                <a href=\"#\" className=\"card-link\">Card link</a>\n                <a href=\"#\" className=\"card-link\">Another link</a>\n            </div>\n                <form>\n                    <div className=\"form-row\">\n                        <div className=\"col\"></div>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"First name\"></input>\n                    </div>\n                    <div className=\"col\">Name\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Last name\"></input>\n                    </div>\n                </form>\n                <button>submit request</button>\n\t\t\t</div>\n            </div>\n        )\n    }\n}\n\nexport default Users;","import React, {Component} from 'react';\n\n\nclass Broadway extends Component {\n    render() {\n        return (\n            <div id=\"content-3\" className=\"content content--switch\">\n            <h2 className=\"content__title\">Broadway</h2>\n            <div className=\"content__subtitle\">Belters</div>\n            </div>\n        )\n    }\n}\n\nexport default Broadway;","import React from 'react';\n\nconst styles = {\n  card: {\n    width: \"18rem\"\n  },\n  image: {\n    width: \"100%\"\n  },\n  container: {\n    padding: \"2px 16px\"\n  }\n}\n\n\nconst Card = ({username, email}) => {\n  return (<div className=\"col\">\n    <div className=\"card\" style={styles.card}>\n      <img className=\"card-img-top\" src=\"https://i.redd.it/8osvgu0j8qp51.jpg\" alt=\"Card image cap\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{username}</h5>\n        <a href=\"api/users\">{email}</a>\n        <div>\n          <a href={`/profile/${username}`} className=\"btn btn-success\">See Profile</a>\n        </div>\n      </div>\n    </div>\n  </div>)\n}\n\nexport default Card;","import React from 'react'\nimport Card from '../../components/Card'\nconst UserList = ({ users }) => {\n  const images = [\n    \"https://i.redd.it/8osvgu0j8qp51.jpg\",\n    \"https://i.redd.it/thsqefzdapp51.jpg\", \n    \"https://i.redd.it/npi58wwn8hp51.jpg\",\n  ]\n  return ( <div class=\"row\">\n    {users.map(user => \n      <Card \n        key={user._id}\n        username={user.username}\n        email={user.email}\n      />\n    )}\n  </div>)\n}\n\nexport default UserList;","import axios from \"axios\";\n\nexport default {\n  // Get all saved users\n  getSavedUsers: function() {\n    return axios.get(\"/api/users\");\n  },\n  getUserInfo: function(username) {\n    console.log(username);\n    return axios.get(\"/api/users/\" + username);\n  }\n}","import React, { Component } from 'react';\nimport UserList from '../pages/Users/UserList';\n\nimport API from '../utils/API';\n\nclass Home extends Component {\n  state = {\n    users: [],\n    currentUser: {},\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  getUsers = () => {\n    API.getSavedUsers()\n      .then(res => this.setState({users: res.data}))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <>\n        <UserList users={this.state.users} />\n      </>\n    )\n  }\n\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nimport API from '../utils/API';\n\nclass Profile extends Component  {\n  state = {\n    id: \"\",\n    username: \"\",\n    email: \"\",\n    songs: []\n  }\n  componentDidMount() {\n    document.title = \"Request Line | Songs\";\n    const username = this.props.match.params.username\n    this.setState({username: username});\n    console.log(username);\n    this.getUserInfo(username);\n  }\n\n  getUserInfo = username => {\n    API.getUserInfo(username)\n      .then(res => \n        this.setState(\n          {\n            id: res.data._id,\n            songs: res.data.profile.songs,\n            email: res.data.email,\n          }  \n      ))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (<div>\n      <a href=\"/\" className=\"btn btn-success\">Home</a>\n      <p>Id: {this.state.id}</p>\n      <h1>{this.state.username}'s Song List</h1>\n      <h2>Contact: {this.state.email}</h2>\n      {this.state.songs \n        ? <div>\n            <p>No songs</p>\n            <a href=\"#\" className=\"btn btn-primary\">+ Add Song</a>    \n          </div> \n        : <div>\n            Here's a list\n          </div>}\n    </div>)\n  }\n}\n\nexport default Profile;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dancers from './components/dancers'\nimport Actors from './components/actors';\nimport Musicians from './components/musicians'\nimport Genres from './components/genres'\nimport Users from './components/users'\nimport Broadway from './components/broadway';\nimport Home from '../src/pages/Home';\nimport Profile from './pages/Profile';\nimport NoMatch from \"../src/pages/NoMatch\";\n\n\nfunction App() {\n  return (\n    \n    <div>\n    <Dancers/>\n    <Musicians/>\n    <Actors/>\n    <Genres/>\n    <Users/>\n    <Broadway/>\n   \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}